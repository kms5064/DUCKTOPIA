syntax = 'proto3';


message PlayerPositionData {
    int32 playerId = 1;
    float x = 2;
    float y = 3;
}

message User { // User 닉네임
    string name = 1;
    int32 userId = 2;
}

enum RoomStateType { // 방 상태
    WAIT = 0;
    PREPARE = 1;
    PLAY = 2;
}

// 방 정보
message RoomData { //방 리스트 받을때
    int32 roomId = 1;
    int32 ownerId = 2;
    string name = 3; //방 이름
    int32 maxUserNum = 4; // 최대 수용 인원 수
    RoomStateType state = 5; //방 상태
    repeated User users = 6;
}

enum PhaseType {
    DAY = 0;
    NIGHT = 1;
}
message GameStateData {
    PhaseType phaseType = 1; 
    int64 nextPhaseAt = 2;
}

message MonsterData {
    int32 monsterId = 1;
    int32 monsterCode = 2;
}

message MonsterPositionData {
    int32 monsterId = 1;
    int32 monsterCode = 2;
    float x = 3; 
    float y = 4;
}

message ObjectData {
    int32 objectId = 1;
    int32 objectCode = 2;
}

message ObjectPositionData {
    int32 objectId = 1;
    int32 objectCode = 2;
    float x = 3;
    float y = 4;
}

// 통신 Payload
message C2SRegisterRequest // 회원가입
{
 string email = 1;
 string password = 2;
 string nickname = 3;
}

message S2CRegisterResponse // 회원가입 응답
{
 bool success = 1;
}

message C2SLoginRequest //로그인 요청
{
 string email = 1;
 string password = 2;
}

message S2CLoginResponse // 로그인 응답
{
 bool success = 1;
 User user = 2;
}

message C2SCreateRoomRequest { // 방생성 요청
 string roomName = 1;
 int32 maxUserNum = 2;
}

message S2CCreateRoomResponse { // 방생성 응답
 bool success = 1;
 RoomData room = 2;
}

message C2SGetRoomListRequest { // 방리스트 요청
}
 
message S2CGetRoomListResponse { // 방리스트 응답
 repeated RoomData rooms = 1;
}



message C2SJoinRoomRequest { // 방참가 요청
 int32 roomId = 1;
}

message S2CJoinRoomResponse { // 방참가 응답
    bool success = 1;
    RoomData room = 2;
}

message S2CJoinRoomNotification { // 방참가 알림
    User user = 1;
}

message C2SLeaveRoomRequest { // 방나감 요청
}

message S2CLeaveRoomResponse { // 방나감 응답
    bool success = 1;
}

message S2CLeaveRoomNotification { // 방나감 알림
    User user = 1;
}

message C2SGamePrepareRequest { // 게임준비 요청
}

message S2CGamePrepareResponse{ // 게임준비 응답 to 호스트클라이언트
 bool success = 1;
 repeated MonsterData monsters = 2;
 repeated ObjectData objects = 3;
}

message S2CGamePrepareNotification { // 게임준비 알림     
 RoomData room = 1;
}

message C2SGameStartRequest { // 게임시작 요청
    repeated MonsterPositionData monsters = 1;
    repeated ObjectPositionData objects = 2;
}

//이때 game을 만들고, player 생성, 몬스터, 오브젝트 정보 만들기

message S2CGameStartResponse { // 게임시작 응답
 bool success = 1;
}

message S2CGameStartNotification { //게임시작 알림
 GameStateData gameState = 1;
 repeated PlayerPositionData playerPositions = 2;
}

//이때 클라 서버 모두 몬스터, 장애물(오브젝트), 플레이어 정보를 가짐


//여기부터 인게임

message C2SPlayerPositionUpdateRequest { // 캐릭터이동 요청
 float x = 1;
 float y = 2;
}

message S2CPlayerPositionUpdateNotification { // 캐릭터이동 알림
 repeated PlayerPositionData playerPositions = 1;
}

message S2CPlayerHpUpdateNotification{ //플레이어 체력 변경 알림
    int32 playerId = 1;
    int32 hp = 2;
   }

   message C2SPlayerAttackRequest // 플레이어 공격 요청
{
 float playerDirX = 1; // 마우스 위치 정보
 float playerDirY = 2;
}

message C2SPlayerAttackMonsterRequest {
    float playerDirX = 1; // 마우스 위치 정보
    float playerDirY = 2;
    int32 monsterId = 3;
}

message S2CPlayerAttackNotification // 플레이어 공격 알림(동기화용)
{
 int32 playerId = 1;
 float playerDirX = 2;
 float playerDirY = 3;
}

message S2CPlayerDeathNotification{ //플레이어가 사망했을 때
    int32 playerId = 1;
   }

message S2CPlayerGetItemRequest {
    int32 playerId = 1;
    int32 itemId = 2;
}

message C2SPlayerUseItemRequest { //아이템 사용 요청
    int32 itemId = 1; // 무기, 식량 모두 아이템으로 표기(무기는 장착, 식량은 소모)
}
  
message S2CPlayerEatFoodResponse {  // 사용한 아이템이 식량일 때
    bool success = 1;
    int32 itemId = 2;
    int32 playerId = 3;
    int32 hunger = 4; 
  }

message S2CPlayerEquipWeaponResponse { // 사용한 아이템이 무기일 때
    bool success = 1;
    int32 itemId = 2;
    int32 playerId = 3;
}


//몬스터
message S2CMonsterSpawnRequest // 몬스터 스폰 호스트클라이언트에게만 요청
{
    repeated MonsterData monsters = 1;
}

message C2SMonsterSpawnResponse { // 몬스터 좌표를 찍어서 서버에 전송
    repeated MonsterPositionData monsters = 1;
}

message S2CMonsterWaveStartNotification { // 모든 클라이언트에게 몬스터 위치, 정보 알림
    repeated MonsterPositionData monsters = 1;
}

message S2CMonsterAwakeNotification // 몬스터 깨어남
{
    int32 monsterId = 1;
    int32 targetId = 2;
}

message S2CMonsterDeathNotification // 몬스터 사망 
{
 int32 monsterId = 1;
}

message C2SMonsterMoveRequest { //몬스터 이동
    int32 monsterId = 1;
    int32 targetId = 2;
    float x = 3;
    float y = 4;
}

message S2CMonsterMoveNotification { // 몬스터 이동 알림
    int32 monsterId = 1;
    int32 targetId = 2; // 몬스터 몸 방향을 위해 필요
    float x = 3;
    float y = 4;
}

message C2SMonsterAttackRequest { // 몬스터 공격 알림
    int32 monsterId = 1;
    int32 targetId = 2;
}

message S2CMonsterAttackNotification { // 몬스터 공격 모든 클라이언트에 알림
    int32 monsterId = 1;
    int32 targetId = 2;
}

message S2CMonsterHpUpdateNotification // 몬스터 체력 감소
{
 int32 monsterId = 1;
 int32 hp = 2;
}

//코어
message S2CCoreHpUpdateNotification{ // 코어 체력 감소 알림
    int32 hp = 2;
   }

message S2CGameOverNotification {
}

//에러
message S2CErrorNotification {
    string errorMessage = 1;
    int64 timestamp = 2;
}

message GamePacket {
  oneof payload {
    S2CMonsterAwakeNotification monsterAwakeNotification = 1;
    S2CMonsterMoveNotification monsterMoveNotification = 2;
    C2SPlayerAttackRequest playerAttackRequest = 4;
    S2CPlayerAttackNotification playerAttackNotification = 5;
    S2CMonsterDeathNotification monsterDeathNotification = 6;
    S2CMonsterHpUpdateNotification monsterHpUpdateNotification = 7;
    S2CMonsterSpawnNotification monsterSpawnNotification = 8;
    C2SRegisterRequest registerRequest = 9;
    S2CRegisterResponse registerResponse = 10;
    C2SLoginRequest loginRequest = 11;
    S2CLoginResponse loginResponse = 12;
    C2SCreateRoomRequest createRoomRequest = 13;
    S2CCreateRoomResponse createRoomResponse = 14;
    C2SGetRoomListRequest getRoomListRequest = 15;
    S2CGetRoomListResponse getRoomListResponse = 16;
    C2SJoinRoomRequest joinRoomRequest = 17;
    S2CJoinRoomResponse joinRoomResponse = 18;
    C2SGamePrepareRequest gamePrepareRequest = 19;
    S2CGamePrepareResponse gamePrepareResponse = 20;
    S2CGamePrepareNotification gamePrepareNotification = 21;
    C2SGameStartRequest gameStartRequest = 22;
    S2CGameStartResponse gameStartResponse = 23;
    S2CGameStartNotification gameStartNotification = 24;
    C2SPositionUpdateRequest positionUpdateRequest = 25;
    S2CPositionUpdateNotification positionUpdateNotification = 26;
    S2CUserUpdateNotification userUpdateNotification = 27;
    S2CPlayerDeathNotification playerDeathNotification = 28;
    S2CPlayerHpUpdateNotification playerHpUpdateNotification = 29;
    C2SEatFoodRequest eatFoodRequest = 30;
    S2CEatFoodResponse eatFoodResponse = 31;
    C2SLeaveRoomRequest leaveRoomRequest = 32;
    S2CLeaveRoomResponse leaveRoomResponse = 33;
    S2CLeaveRoomNotification leaveRoomNotification = 34;
    S2CJoinRoomNotification joinRoomNotification = 35;
    S2CErrorResponse errorResponse = 36;
  }
}